name: Create diagram
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      - develop
jobs:
  # get the latest diagram
  get-latest-diagram:
    runs-on: ubuntu-latest
    outputs:
      prev_artifact_url: ${{ steps.extract-artifact-data.outputs.result }}
    steps:
      - name: Get diagram artifacts (REST API)
        id: get_diagram_artifacts
        uses: octokit/request-action@v2.1.9
        with:
          route: GET /repos/${{ github.repository }}/actions/artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get 1st artifact id
        id: extract-artifact-data
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const data = ${{ steps.get_diagram_artifacts.outputs.data }};
            return data.artifacts[0].archive_download_url;

  create-diagram:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Update diagram
        uses: githubocto/repo-visualizer@0.9.1
        with:
          excluded_paths: ignore,.github
          commit_message: update diagram [skip ci]
          artifact_name: diagram

  foo:
    runs-on: ubuntu-latest
    needs:
      - get-latest-diagram
    steps:
      - name: bar
        env:
          ARTIFACT_URL: ${{ needs.get-latest-diagram.outputs.prev_artifact_url }}
        run: |
          echo $ARTIFACT_URL
